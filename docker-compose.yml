networks:
  dev:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./logs:/var/log/nginx
    environment:
      - NGINX_ENTRYPOINT_QUIET_LOGS=0
      - NGINX_ERROR_LOG_LEVEL=debug
    depends_on:
      - frontend
      - backend
    networks:
      - dev
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  backend:
    image: node:current-alpine
    container_name: backend
    working_dir: /usr/src/app
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
      - ./logs:/usr/src/app/logs
      - type: bind
        source: ./backend/db.json
        target: /usr/src/app/db.json
        read_only: false
    command: >
      sh -c "npm install && npm run dev"
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - LOG_DIR=/usr/src/app/logs
    networks:
      - dev
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3001/todos"]
      interval: 10s
      timeout: 5s
      retries: 3
    tty: true
    stdin_open: true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - DEBUG=vite:*
      - LOG_DIR=/app/logs
    networks:
      - dev
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"