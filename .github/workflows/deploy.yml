name: Deploy to AWS EC2

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            set -ex  # Exit on error and print commands

            # Update system and install dependencies
            sudo yum update -y
            sudo yum install -y git docker

            # Configure Git credentials
            git config --global credential.helper store
            echo "https://${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

            # Setup application directory
            APP_DIR=~/RTK-Query
            echo "Deploying to $APP_DIR"

            # Remove existing directory if corrupted
            if [ -d "$APP_DIR" ] && [ ! -d "$APP_DIR/.git" ]; then
              echo "Removing invalid repository..."
              rm -rf "$APP_DIR"
            fi

            # Clone or update repository
            if [ ! -d "$APP_DIR" ]; then
              echo "Cloning fresh repository..."
              git clone https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }}.git "$APP_DIR"
            else
              echo "Updating existing repository..."
              cd "$APP_DIR"
              git fetch origin
              git reset --hard origin/main
            fi

            # Verify repository and files
            cd "$APP_DIR"
            ls -la

            if [ ! -f "docker-compose.yml" ]; then
              echo "Error: docker-compose.yml not found!"
              exit 1
            fi

            # Deploy with Docker Compose
            docker-compose down || true
            docker-compose pull
            docker-compose up --build -d

            # Verify deployment
            echo "Deployment status:"
            docker-compose ps
            echo "Container logs:"
            docker-compose logs
